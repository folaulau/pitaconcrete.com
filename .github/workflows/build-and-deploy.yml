name: Build and deploy to Prod

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    outputs:
      build-folder: ${{ steps.build-folder.outputs.dist-build }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        
      - name: Use Node.js 18
        uses: actions/setup-node@v2
        with:
            node-version: '18'

      - name: Setting version
        run: echo $GITHUB_SHA > version.txt

      - name: Install dependencies
        run: npm install
        
      # build:dev uses .env.development
      - name: Build app
        run: npm run build

      - name: Copy version to application and add out to GH outputs
        id: build-folder
        run: |
          cp version.txt out/version.txt
          cd out
          ls
          echo "::set-output name=dist-build::out"

      - uses: actions/upload-artifact@v2
        with:
          name: build-folder
          path: out

  push-to-prod:
    runs-on: ubuntu-latest
    needs: build
    environment: prod-env
    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/download-artifact@v2
        with:
          name: build-folder
          path: out

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Sync app
        run: aws s3 sync out s3://pitaconcrete.com --delete
        
      - name: Copy app
        run: aws s3 cp s3://pitaconcrete.com/index.html s3://pitaconcrete.com/index.html --content-type 'text/html' --cache-control 'no-store, max-age=0' --metadata-directive REPLACE

      - name: Clear cloudfront cache
        run: aws cloudfront create-invalidation --distribution-id=E2R6MFJLPJ8GQJ --paths '/index.html' '/aboutus' '/aboutus/' '/galleries' '/galleries/' '/services' '/services/' '/contact' '/contact/' '/version.txt' 

